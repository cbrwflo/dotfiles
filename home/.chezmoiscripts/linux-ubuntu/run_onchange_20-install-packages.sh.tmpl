#!/bin/sh
{{ if and (eq .chezmoi.os "linux") (or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "pop")) -}}

sudo apt-get update
sudo apt install apt-transport-https bash bash-completion wget curl git git-lfs tree jq unzip fzf skopeo notepadqq ripgrep --yes

# Are we using Snapcraft?
if [ -S /run/snapd.socket ]; then
  echo "installing using snapcraft"

  # https://vscodium.com/
  snap install codium --classic

  # kubernetes & cloud-native utilities
  sudo snap install chezmoi --classic
  sudo snap install kubectl --classic --channel=1.31/stable
  sudo snap install helm --classic
  sudo snap install kubectx --classic

  # utilities
  sudo snap install yq
else
  echo "installing using apt"

  # chezmoi
  sh -c "$(curl -fsLS get.chezmoi.io)"

  # codium - https://vscodium.com/
  wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg \
    | gpg --dearmor \
    | sudo dd of=/usr/share/keyrings/vscodium-archive-keyring.gpg \
    && \
    echo 'deb [ signed-by=/usr/share/keyrings/vscodium-archive-keyring.gpg ] https://download.vscodium.com/debs vscodium main' \
    | sudo tee /etc/apt/sources.list.d/vscodium.list \
    && \
    apt install -y codium

  # helm: https://helm.sh/docs/intro/install/#from-apt-debianubuntu
  curl -fsSL https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list > /dev/null

  # kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management
  KUBECTL_VERSION=v1.31
  curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBECTL_VERSION/deb/Release.key | gpg --dearmor | sudo tee /usr/share/keyrings/kubernetes-apt-keyring.gpg > /dev/null
  echo "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBECTL_VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg # allow unprivileged APT programs to read this keyring
  sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list   # helps tools such as command-not-found to work correctly

  # kubernetes & cloud-native utilities
  sudo apt-get update
  sudo apt-get install helm kubectl --yes
fi

if ! command -v kubectx >/dev/null 2>&1; then
  echo "installing kubectx"
  sudo git clone https://github.com/ahmetb/kubectx /usr/local/kubectx
  sudo ln -s /usr/local/kubectx/kubectx /usr/local/bin/kubectx
  sudo ln -s /usr/local/kubectx/kubens /usr/local/bin/kubens
fi

# utilities
if ! command -v yq >/dev/null 2>&1; then
  echo "installing yq"
  wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
fi

# joplin
wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash

# tilt is slow to re-install
if ! command -v tilt >/dev/null 2>&1; then
  echo "installing tilt"
  curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash
fi

# nodeJS
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash

# golang
GO_VERSION=$(curl -fsSL 'https://go.dev/VERSION?m=text' | head -n 1)
wget "https://go.dev/dl/${GO_VERSION}.linux-amd64.tar.gz" \
  && sudo rm -rf /usr/local/go \
  && sudo tar -C /usr/local -xzf go*.linux-amd64.tar.gz \
  && rm "${GO_VERSION}.linux-amd64.tar.gz"
{{ end -}}
